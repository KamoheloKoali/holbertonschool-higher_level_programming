test for 0-add_integer.py module using doctest

>>> add_integer = __import__("0-add_integer").add_integer
>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(2, "c")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: b must be an integer

>>> add_integer("b", 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: a must be an integer

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
     
>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(2, None)
Traceback (most recent call last):
ValueError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
ValueError: a must be an integer
